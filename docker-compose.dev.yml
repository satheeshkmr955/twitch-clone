services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: nextjs-dev:1.2.0
    expose:
      - "3000"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"
      - "traefik.http.routers.nextjs.rule=Host(`localhost`)"
      - "traefik.http.routers.nextjs.entrypoints=nextjs"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"
      - "traefik.http.services.nextjs.loadbalancer.healthcheck.path=/api/health"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    volumes:
      - ./logs/:/app/logs/:rw
    networks:
      - traefik_network
      - twitch_network
      - prometheus_network
      - otel_network
    deploy:
      replicas: 2
    environment:
      - NODE_ENV=development
    restart: always
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
        - action: rebuild
          path: package.json

  filebeat:
    container_name: filebeat_nextjs
    image: docker.elastic.co/beats/filebeat:8.17.1
    restart: always
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs/:/usr/share/filebeat/logs/:rw
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data:/usr/share/filebeat/data:rw
    environment:
      - xpack.monitoring.enabled=false
      - FILEBEAT_OUTPUT_LOGSTASH_HOST=logstash:5044
    networks:
      - twitch_network
      - logstash_network

volumes:
  filebeat_data:
    name: filebeat_nextjs_data

networks:
  traefik_network:
    external: true
  twitch_network:
    external: true
  prometheus_network:
    external: true
  otel_network:
    external: true
  logstash_network:
    external: true
